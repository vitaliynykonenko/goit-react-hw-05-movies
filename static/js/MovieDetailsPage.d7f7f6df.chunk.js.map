{"version":3,"file":"static/js/MovieDetailsPage.d7f7f6df.chunk.js","mappings":"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","sources":["components/Pageheading/Pageheading.styled.jsx","components/Pageheading/Pageheading.js","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\npadding: 8px;\nmargin-top: 0;\nborder-radius: 8px;\ncolor: #fff;\nfont-size: 40px;\nfont-weight: 500;\ntext-align: center;\nbackground-image: repeating-linear-gradient(\n    -45deg,\n    #606dbc,\n    #606dbc 15px,\n    #465298 15px,\n    #465298 30px\n  );\n`;","import {Title} from './Pageheading.styled';\n\nexport default function PageHeading({ text }) {\n  return <Title >{text}</Title>;\n}\n","import styled from 'styled-components';\n\nexport const BackButton = styled.button`\ncursor: pointer;\nwidth: 80px;\ntext-align: center;\nfont-weight: bold;\npadding: 8px 15px;\nmargin-bottom: 15px;\nbox-shadow: 1px 2px 2px 0 rgb(0, 0, 0/0.5);\ntransition: box-shadow 250ms linear;\nborder-radius: 10px;\nborder: 1px solid #2196f3;\n\n:hover {\n    background-color: #2196f3;\n    color: white;\n  }\n`;\n\nexport const Reviews = styled.p`\n\ndisplay: inline-block;\npadding: 8px 15px;\nborder-radius: 10px;\nborder: 1px solid #2196f3;\nmargin-right: 30px;\ncolor: black;\nfont-weight: bold;\n:hover {\n    background-color: #2196f3;\n    color: white;\n \n`;\n\nexport const Cast = styled.p`\n\ndisplay: inline-block;\npadding: 8px 28px;\nborder-radius: 10px;\nborder: 1px solid #2196f3;\ncolor: black;\nfont-weight: bold;\n:hover {\n    background-color: #2196f3;\n    color: white;\n \n`;\n","import { BackButton, Reviews, Cast } from './MovieDetailsPage.styled';\nimport Container from 'components/Container/Container';\nimport { useEffect, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesDetails } from 'services/movies-api';\n// import { createBrowserHistory } from 'history';\nimport PageHeading from 'components/Pageheading/Pageheading';\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getYear = () => new Date(movie.release_date).getFullYear();\n\n  const { movieId } = useParams();\n  // let history = createBrowserHistory();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n\n  const handleClick = () => navigate(location?.state?.from ?? '/');\n  // history.back();\n  // history.forward();\n\n  useEffect(() => {\n    setLoading(true);\n    fetchMoviesDetails(movieId)\n      .then(res => {\n        setMovie(res);\n      })\n      .catch(error => {\n        setError('Ooops. Something went wrong...');\n        console.log(error);\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      <Container>\n        <BackButton onClick={handleClick}>\n          Go back\n        </BackButton>\n\n        {movie && <PageHeading text={movie.title} />}\n       \n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n        {movie && (\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <h3>{movie.title}</h3>\n            <p>({getYear()})</p>\n            <p>User Score: {movie.popularity}</p>\n            <div >\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n            </div>\n          </div>\n        )}\n        <hr />\n        <div>\n          <h2>Additional Information</h2>\n          <NavLink\n            to={`/movies/${movieId}/reviews`}\n           \n            state={location.state}\n          >\n            <Reviews >Reviews</Reviews>\n          </NavLink>\n\n          <NavLink\n            to={`/movies/${movieId}/cast`}\n           \n            state={location.state}\n          >\n            <Cast >Cast</Cast>\n          </NavLink>\n          <hr />\n          <Outlet />\n        </div>\n      </Container>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '6969c1c13baa49f777b714c28a585a8f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n  \n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`, {}\n  );\n  // console.log(res.data.results);\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n\n"],"names":["Title","styled","PageHeading","text","BackButton","Reviews","Cast","MovieDetailsPage","useState","movie","setMovie","error","setError","loading","setLoading","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchMoviesDetails","then","res","catch","console","log","finally","Container","onClick","state","from","title","src","poster_path","alt","Date","release_date","getFullYear","popularity","overview","to","API_KEY","axios","END_POINTS","getMovies","page","data","results","fetchByQuery","query","id","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}