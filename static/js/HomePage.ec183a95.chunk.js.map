{"version":3,"file":"static/js/HomePage.ec183a95.chunk.js","mappings":"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","sources":["components/Pageheading/Pageheading.styled.jsx","components/Pageheading/Pageheading.js","components/TrendingMovies/MoviesList.styled.jsx","components/TrendingMovies/MovieList.jsx","ui/NotFoundView.jsx","pages/HomePage/HomePage.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\npadding: 8px;\nmargin-top: 0;\nborder-radius: 8px;\ncolor: #fff;\nfont-size: 40px;\nfont-weight: 500;\ntext-align: center;\nbackground-image: repeating-linear-gradient(\n    -45deg,\n    #606dbc,\n    #606dbc 15px,\n    #465298 15px,\n    #465298 30px\n  );\n`;","import {Title} from './Pageheading.styled';\n\nexport default function PageHeading({ text }) {\n  return <Title >{text}</Title>;\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n\n  flex-direction: column;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: space-around;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: 500;\n  margin: 10px;\n\n`;\n\nexport const Poster = styled.img`\n  margin-bottom: 5px;\n \n`;\n\nexport const Box = styled.ul`\n  color: black;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\n\nexport const Title = styled.h3`\n\n  display: flex;\n  justify-content: space-around;\n  color: black;\n  font-size: 20px;\n  :hover {\n    color: #2196f3;\n`;\n\n\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport noPhoto from '../../images/broken_img.png';\nimport { Box, Item, Poster, Title} from './MoviesList.styled';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  // const location = useLocation();\n  // console.log(location.pathname);\n  return (\n    <>\n      <Box>\n        {movies.map(({ id, original_title, poster_path }) => (\n          <Item key={id} >\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n            <Poster\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                    : noPhoto\n                }\n                  alt={`${movies.title} portrait`}\n              />\n             \n              <Title>{original_title}</Title>\n            </Link>\n          </Item>\n        ))}\n      </Box>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  // prevLocation: PropTypes.object.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","import { Link } from 'react-router-dom';\n\nexport default function NotFoundView() {\n  return (\n    <h1>\n      Page is not found :( Go to <Link to=\"/\">Home page</Link>{' '}\n    </h1>\n  );\n}\n","// import SearchBar from 'components/MoviesPage/MoviesPage';\nimport Container from 'components/Container/Container';\nimport PageHeading from 'components/Pageheading/Pageheading';\nimport MovieList from 'components/TrendingMovies/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'services/movies-api';\nimport NotFoundView from 'ui/NotFoundView';\n\n\nexport default function GetTrendingMovies() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  // const [query, setQuery] = useState('');\n\n  // const onLoadBtnClick = () => {\n  //   setPage(prevPage => prevPage + 1);\n  // };\n\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n      getMovies()\n        .then(results => {\n          setMovies(results);\n          // setMovies(prevState => [...prevState, ...results]);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  // const handleFormSubmit = () => {\n  //   setQuery(query);\n  //   setPage(1);\n  //   setMovies([0]);\n  // };\n  const isNotFound = !loading && !movies.length;\n  return (\n    <>\n      <Container>\n        <PageHeading text={'Trending Movies'}></PageHeading>\n        {/* <SearchBar onSubmit={handleFormSubmit} /> */}\n        {loading && 'Loading ...'}\n        {isNotFound && <NotFoundView />}\n        {error && <div>{error}</div>}\n        {movies && <MovieList movies={movies} />}\n      </Container>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '6969c1c13baa49f777b714c28a585a8f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n  \n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`, {}\n  );\n  // console.log(res.data.results);\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n\n"],"names":["Title","styled","PageHeading","text","Item","Poster","Box","movies","prevLocation","map","id","original_title","poster_path","to","state","from","src","noPhoto","alt","title","NotFoundView","GetTrendingMovies","useState","setMovies","error","setError","loading","setLoading","useEffect","getMovies","then","results","catch","console","log","finally","isNotFound","length","Container","MovieList","API_KEY","axios","END_POINTS","page","res","data","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}