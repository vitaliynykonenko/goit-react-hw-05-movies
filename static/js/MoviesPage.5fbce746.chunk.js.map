{"version":3,"file":"static/js/MoviesPage.5fbce746.chunk.js","mappings":"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","sources":["components/Pageheading/Pageheading.styled.jsx","components/Pageheading/Pageheading.js","components/TrendingMovies/MoviesList.styled.jsx","components/TrendingMovies/MovieList.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/SearchBar.jsx","pages/MoviesPage/MoviesPage.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\npadding: 8px;\nmargin-top: 0;\nborder-radius: 8px;\ncolor: #fff;\nfont-size: 40px;\nfont-weight: 500;\ntext-align: center;\nbackground-image: repeating-linear-gradient(\n    -45deg,\n    #606dbc,\n    #606dbc 15px,\n    #465298 15px,\n    #465298 30px\n  );\n`;","import {Title} from './Pageheading.styled';\n\nexport default function PageHeading({ text }) {\n  return <Title >{text}</Title>;\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n\n  flex-direction: column;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: space-around;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: 500;\n  margin: 10px;\n\n`;\n\nexport const Poster = styled.img`\n  margin-bottom: 5px;\n \n`;\n\nexport const Box = styled.ul`\n  color: black;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\n\nexport const Title = styled.h3`\n\n  display: flex;\n  justify-content: space-around;\n  color: black;\n  font-size: 20px;\n  :hover {\n    color: #2196f3;\n`;\n\n\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport noPhoto from '../../images/broken_img.png';\nimport { Box, Item, Poster, Title} from './MoviesList.styled';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  // const location = useLocation();\n  // console.log(location.pathname);\n  return (\n    <>\n      <Box>\n        {movies.map(({ id, original_title, poster_path }) => (\n          <Item key={id} >\n            <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n            <Poster\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                    : noPhoto\n                }\n                  alt={`${movies.title} portrait`}\n              />\n             \n              <Title>{original_title}</Title>\n            </Link>\n          </Item>\n        ))}\n      </Box>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  // prevLocation: PropTypes.object.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\nmargin-left: 35%;\nmargin-right: 30%;\n`;\n\nexport const InputForm = styled.input`\npadding: 10px 15px;\nborder-radius: 10px;\nborder: 3px solid #2196f3;\nmargin-right: 20px;\nfont-size: 20px;\noutline: transparent;\n\n:hover {\n    background-color: #f4f8fa;\n`;\n\nexport const SearchButton = styled.button`\ncursor: pointer;\npadding: 8px 15px;\nmargin-bottom: 15px;\nbox-shadow: 1px 2px 2px 0 rgb(0, 0, 0/0.5);\ntransition: box-shadow 250ms linear;\nborder-radius: 10px;\nborder: 3px solid #2196f3;\nfont-weight: bold;\n\n:hover {\n    background-color: #2196f3;\n    color: white;\n`;","import { SearchForm, InputForm, SearchButton } from './MoviesPage.styled';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSearch }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n   const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter the film title');\n    }\n\n    onSearch(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} >\n        <InputForm\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search ...\"\n          onChange={handleQuerySearch}\n          \n        />\n        <SearchButton\n          type=\"submit\"\n          //   onClick={handleInputClear}\n         \n        >\n          Search\n        </SearchButton>\n      </SearchForm>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'pages/MoviesPage/SearchBar';\nimport { fetchByQuery } from 'services/movies-api';\nimport MovieList from 'components/TrendingMovies/MovieList';\nimport Container from 'components/Container/Container';\nimport PageHeading from 'components/Pageheading/Pageheading';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n\n    const fetchMovie = () => {\n      setLoading(true);\n      fetchByQuery(searchRequest)\n        .then(results => {\n          if (!results.length) {\n            alert('No movies found!');\n          }\n\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n  }, [searchRequest]);\n\n  // onSubmit\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n\n  return (\n    <>\n      <Container>\n        <PageHeading text={'Movie Search'} />\n        \n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n\n        <SearchBar onSearch={onSubmit} />\n        {movies && <MovieList movies={movies} prevLocation={location} />}\n      </Container>\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = '6969c1c13baa49f777b714c28a585a8f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n  \n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`, {}\n  );\n  // console.log(res.data.results);\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n\n"],"names":["Title","styled","PageHeading","text","Item","Poster","Box","movies","prevLocation","map","id","original_title","poster_path","to","state","from","src","noPhoto","alt","title","SearchForm","InputForm","SearchButton","onSearch","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","fetchByQuery","then","results","length","catch","console","log","finally","Container","query","MovieList","API_KEY","axios","END_POINTS","getMovies","page","res","data","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}