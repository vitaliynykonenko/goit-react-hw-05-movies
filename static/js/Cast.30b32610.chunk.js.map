{"version":3,"file":"static/js/Cast.30b32610.chunk.js","mappings":"iPAEaA,EAAWC,EAAAA,GAAAA,GAAH,8FAORC,EAAWD,EAAAA,GAAAA,GAAH,8C,6CC+CrB,EAlDa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAW,GAFG,UAGIG,EAAAA,EAAAA,IAAmBX,GAHvB,OAGRY,EAHQ,OAIdR,EAAQQ,GAJM,gDAMdN,EAAS,kCANK,yBAQdE,GAAW,GARG,4EAAH,qDAWfE,GACD,GAAE,CAACV,KAGF,gCACGO,GAAW,aACXF,IAAS,yBAAMA,KAChB,SAACR,EAAD,UACGM,EAAKU,KAAI,SAAAC,GACR,OACE,UAACf,EAAD,YACE,gBACEgB,IACED,EAASE,aAAT,yCACsCF,EAASE,cAC3CC,EAENC,IAAG,UAAKJ,EAASK,KAAd,gBAEL,4BACE,kCAAUL,EAASK,SACnB,uCAAeL,EAASM,kBAXbN,EAASO,GAe3B,QAIR,C,8LCpDKC,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAIHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACLH,EAAAA,GAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCI,EADlC,uCAC6E,CAAC,GAFzE,cACjBd,EADiB,yBAKhBA,EAAIe,KAAKC,SALO,2CAAH,qDAQTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACRH,EAAAA,GAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCI,EADrC,kBACmDI,EADnD,wCADQ,cACpBlB,EADoB,yBAKnBA,EAAIe,KAAKC,SALU,2CAAH,sDAQZG,EAAkB,mCAAG,WAAMV,GAAN,uFACdE,EAAAA,GAAAA,IAAA,UACbC,EADa,YACcH,EADd,oBAC4BC,EAD5B,oBADc,cAC1BV,EAD0B,yBAKzBA,EAAIe,MALqB,2CAAH,sDAQlBhB,EAAkB,mCAAG,WAAMU,GAAN,uFACdE,EAAAA,GAAAA,IAAA,iBACNF,GADM,OACDG,EADC,oBACkCF,EADlC,oBADc,cAC1BV,EAD0B,yBAKzBA,EAAIe,KAAKxB,MALgB,2CAAH,sDAQlB6B,EAAkB,mCAAG,WAAOX,GAAP,4FAAWK,EAAX,+BAAkB,EAAlB,SACdH,EAAAA,GAAAA,IAAA,iBACNF,GADM,OACDG,EADC,oBACkCF,EADlC,gCACiEI,IAFnD,cAC1Bd,EAD0B,yBAKzBA,EAAIe,KAAKC,SALgB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\ngap: 15px;\n`;\n\nexport const CastItem = styled.li`\nmargin-bottom: 25px;\n`;","import { CastList, CastItem } from './Cast.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesCredits } from 'services/movies-api';\nimport noPhoto from '../../images/broken_img.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const res = await fetchMoviesCredits(movieId);\n        setCast(res);\n      } catch (error) {\n        setError('Ooops. Something went wrong...');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && 'Loading...'}\n      {error && <div>{error}</div>}\n      <CastList >\n        {cast.map(castItem => {\n          return (\n            <CastItem key={castItem.id} >\n              <img\n                src={\n                  castItem.profile_path\n                    ? `https://image.tmdb.org/t/p/w300${castItem.profile_path}`\n                    : noPhoto\n                }\n                alt={`${castItem.name} portrait`}\n              />\n              <div>\n                <p>Name: {castItem.name}</p>\n                <p>Character: {castItem.character}</p>\n              </div>\n            </CastItem>\n          );\n        })}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '6969c1c13baa49f777b714c28a585a8f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n  \n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`, {}\n  );\n  // console.log(res.data.results);\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n\n"],"names":["CastList","styled","CastItem","movieId","useParams","useState","cast","setCast","error","setError","loading","setLoading","useEffect","fetchCast","fetchMoviesCredits","res","map","castItem","src","profile_path","noPhoto","alt","name","character","id","API_KEY","axios","END_POINTS","getMovies","page","data","results","fetchByQuery","query","fetchMoviesDetails","fetchMoviesReviews"],"sourceRoot":""}